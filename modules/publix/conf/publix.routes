# Routes
# This file defines all application routes (Higher priority routes first)
# Order is important!
# ~~~~

### Publix ###

+ nocsp
GET     /publix/:studyId/start                                      @controllers.publix.LegacyStudyRuns.transformToStudyLink(request: Request, studyId: Long, batchId: Long)

+ nocsp
GET     /publix/run                                                 @controllers.publix.PublixInterceptor.studyEntry(request: Request, code: String ?= null)
+ nocsp
GET     /publix/:studyCode                                          @controllers.publix.PublixInterceptor.run(request: Request, studyCode: String)
GET     /publix/:studyResultUuid/end                                @controllers.publix.PublixInterceptor.finishStudy(request: Request, studyResultUuid: String, successful: Boolean ?= true, message: String ?= null)
GET     /publix/:studyResultUuid/abort                              @controllers.publix.PublixInterceptor.abortStudy(request: Request, studyResultUuid: String, message: String ?= null)
+ nocsp
GET     /publix/:studyResultUuid/:componentUuid/start               @controllers.publix.PublixInterceptor.startComponent(request: Request, studyResultUuid: String, componentUuid: String, message: String ?= null)
GET     /publix/:studyResultUuid/:componentUuid/initData            @controllers.publix.PublixInterceptor.getInitData(request: Request, studyResultUuid: String, componentUuid: String)
+ nocsrf
POST    /publix/:studyResultUuid/studySessionData                   @controllers.publix.PublixInterceptor.setStudySessionData(request: Request, studyResultUuid: String)
+ nocsrf
POST    /publix/:studyResultUuid/heartbeat                          @controllers.publix.PublixInterceptor.heartbeat(request: Request, studyResultUuid: String)
+ nocsrf
PUT     /publix/:studyResultUuid/:componentUuid/resultData          @controllers.publix.PublixInterceptor.submitResultData(request: Request, studyResultUuid: String, componentUuid: String)
+ nocsrf
POST    /publix/:studyResultUuid/:componentUuid/resultData          @controllers.publix.PublixInterceptor.appendResultData(request: Request, studyResultUuid: String, componentUuid: String)
+ nocsrf
POST    /publix/:studyResultUuid/:componentUuid/log                 @controllers.publix.PublixInterceptor.log(request: Request, studyResultUuid: String, componentUuid: String)
+ nocsrf
POST    /publix/:studyResultUuid/:componentUuid/files/:filename     @controllers.publix.PublixInterceptor.uploadResultFile(request: Request, studyResultUuid: String, componentUuid: String, filename: String)
GET     /publix/:studyResultUuid/files/:filename                    @controllers.publix.PublixInterceptor.downloadResultFile(request: Request, studyResultUuid: String, filename: String, componentId: String ?= null)

# Batch and group channel endpoints
GET     /publix/:studyResultUuid/batch/open                         @controllers.publix.ChannelInterceptor.openBatch(studyResultUuid: String)
GET     /publix/:studyResultUuid/group/join                         @controllers.publix.ChannelInterceptor.joinGroup(studyResultUuid: String)
GET     /publix/:studyResultUuid/group/reassign                     @controllers.publix.ChannelInterceptor.reassignGroup(studyResultUuid: String)
GET     /publix/:studyResultUuid/group/leave                        @controllers.publix.ChannelInterceptor.leaveGroup(studyResultUuid: String)


### Static resources ###

# Study assets
+ nocsp
GET     /publix/:studyResultUuid/final/endPage.html      @controllers.publix.StudyAssets.endPage(studyResultUuid: String, confirmationCode: Option[String])
GET     /publix/:studyResultUuid/:componentUuid/*file    @controllers.publix.StudyAssets.viaStudyPath(studyResultUuid: String, componentUuid: String, file: String)
GET     /study_assets_root/*file                         @controllers.publix.StudyAssets.viaAssetsPath(file)
GET     /study_assets/*file                              @controllers.publix.StudyAssets.viaAssetsPath(file)
